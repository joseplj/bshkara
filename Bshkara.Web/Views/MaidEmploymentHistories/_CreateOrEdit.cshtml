@using Bshkara.Web.Extentions
@model Bshkara.Core.Entities.MaidEmploymentHistoryEntity

@{
    Model.MaidId = Model.MaidId == Guid.Empty ? (Guid)ViewBag.MaidId : Model.MaidId;
}

<div class="row">
    <div class="col-md-12 ">
        <div class="portlet light bordered">
            <div class="portlet-title">
                <div class="caption font-red-sunglo">
                    <i class="fa fa-language"></i>
                    <span class="caption-subject bold uppercase"> Default Form</span>
                </div>
            </div>
            <div class="portlet-body form">
                <div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="hpanel">
                                @if (ViewData.ModelState.HasNotPropertyErrors())
                                {
                                    <div class="alert alert-danger">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    </div>
                                }
                                <div class="panel-body">
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.Id)
                                    @Html.HiddenFor(model => model.MaidId)
                                    @Html.HiddenFor(model => model.CreatedById)
                                    @Html.HiddenForDateTime("CreatedAt", @Model.CreatedAt)
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Descripion, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Descripion, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                                            @Html.ValidationMessageFor(model => model.Descripion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="hr-line-dashed"></div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Country, htmlAttributes: new {@class = "control-label col-md-2"})
                                        <div class="col-md-10">
                                            @Html.DropDownList("CountryId", null, "-- choose country --", htmlAttributes: new {@class = "form-control"})
                                            @Html.ValidationMessageFor(model => model.CountryId, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                    <div class="hr-line-dashed"></div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                           @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                                        @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="hr-line-dashed"></div>
                                    <div class="form-group m-b-none">
                                        <div class="col-md-offset-2 col-md-10">
                                            <button class="btn btn-info" type="submit"><i class="fa fa-check"></i>Save</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
